plugins {
    id 'java'
    id "io.freefair.lombok" version "8.3"
}

group = 'by.clevertec.proxy'
version = '1.0-SNAPSHOT'

java {
    sourceCompatibility = JavaLanguageVersion.of(17)
    targetCompatibility = JavaLanguageVersion.of(17)
}

repositories {
    mavenCentral()
}

ext {
    postgresqlVersion = '42.6.0'
    snakeyamlVersion = '2.1'
    junitVersion = '5.10.1'
    mockitoVersion = '5.6.0'
    mapstructVersion = '1.5.5.Final'
    assertjVersion = '3.24.2'
    log4jVersion = '2.20.0'
    dbcpVersion = '2.11.0'
    dbutilsVersion = '1.8.1'
}

compileJava {
    options.compilerArgs += [
            '-Amapstruct.suppressGeneratorTimestamp=true',
            '-Amapstruct.suppressGeneratorVersionInfoComment=true',
            '-Amapstruct.verbose=true'
    ]
}

dependencies {
    implementation "org.postgresql:postgresql:${postgresqlVersion}"
    implementation "org.yaml:snakeyaml:${snakeyamlVersion}"
    implementation "org.mapstruct:mapstruct:${mapstructVersion}"
    implementation "org.mapstruct:mapstruct-processor:${mapstructVersion}"
    implementation "org.apache.logging.log4j:log4j-core:${log4jVersion}"
    implementation "org.apache.commons:commons-dbcp2:${dbcpVersion}"
    implementation "commons-dbutils:commons-dbutils:${dbutilsVersion}"
    
    testAnnotationProcessor "org.mapstruct:mapstruct-processor:${mapstructVersion}"

    annotationProcessor "org.mapstruct:mapstruct-processor:${mapstructVersion}"

    testImplementation "org.mockito:mockito-junit-jupiter:${mockitoVersion}"
    testImplementation platform ("org.junit:junit-bom:${junitVersion}")
    testImplementation 'org.junit.jupiter:junit-jupiter'
    testImplementation "org.assertj:assertj-core:${junitVersion}"

    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine'
}

jar {
    archiveFileName = "proxy-${version}.jar"
    duplicatesStrategy(DuplicatesStrategy.EXCLUDE)
    from(configurations.runtimeClasspath.files.collect { zipTree(it) })
    manifest {
        attributes 'Main-Class': 'by.clevertec.proxy.Main',
                'Implementation-Title': 'proxy',
                'Implementation-Version': version
    }
}

test {
    useJUnitPlatform()
}